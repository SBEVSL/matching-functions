short = {}
    np.set_printoptions(suppress=True)
    for pair in matrices:
        rows = pca(matrices[pair])
        cols = pca(np.transpose(matrices[pair]))

        comparisons[pair] = np.asarray(comparisons[pair])
        comparisons[pair] = comparisons[pair][rows]

        T = np.transpose(comparisons[pair])
        comparisons[pair] = np.transpose(T[cols])

        for clus in comparisons[pair]:
            atom2 = []
            r = []
            for at in clus:
                atom2.append(at.atom2)
                r.append(at.dist)
            atom1 = clus[0].atom1
            res1 = clus[0].res1
            res2 = clus[0].res2
            if pair not in short:
                short[pair] = []
            else:
                short[pair].append(Comparison(atom1=atom1, atom2=atom2, res1=res1, res2=res2, r=r))

        for cluster in short[pair]:
            short[pair] = matchEach(r=cluster.dist, res1=cluster.res1, atom1=cluster.atom1, res2 = cluster.res2, atom2 = cluster.atom2)